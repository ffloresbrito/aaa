#for T in List do                                                                              #
#> pi := TransitionFunction(T);                                                                        
#> lambda:=OutputFunction(T);                                                                          
#> newstr := Concatenation("\n  Add(CoreList, Transducer(2, 2, ", String(pi) , ", #",String(lambda) ,"))");
#> while Size(newstr)> 75 do                                                                           
#> Append(str, newstr{[1 .. 70]});                                                                     
#> newstr := newstr{[71 .. Size(newstr)]};
#>  Append(str, "\n  ");
#> od;
#> Append(str, newstr);
#> Append(str, ";");
#> od;

InstallMethod(CoreExamples, "for a pos int", [IsPosInt],
function(i)
  local CoreList;
  CoreList := [];
  Add(CoreList, Transducer(2, 2, [ [ 1, 1 ] ], [ [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ [ ], [ 0
  , 1 ] ], [ [ ], [ 1 ] ], [ [ 0, 0, 0 ], [ 1, 0, 1 ] ], [ [ 1 ], [ 0, 0
  , 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 2 ] ], [ [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 0 ], [ ] ], [ [ 1, 1, 0 ], [ 0 ] ], [ 
  [ ], [ ] ], [ [ 0, 1, 0 ], [ 1, 1, 1 ] ], [ [ 1, 0 ], [ ] ], [ [ 0 ], 
  [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 1, 3 ] ], [ [ 
  [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ 
  [ 0, 0 ], [ 1, 1 ] ], [ [ 1, 0 ], [ 0, 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 4
   ], [ 1, 2 ], [ 3, 4 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ ],
   [ ] ], [ [ 1 ], [ 0 ] ], [ [ 0, 0 ], [ 1, 1 ] ], [ [ 1, 0 ], [ 0, 1 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ 
  [ 1, 0 ], [ 0, 1 ] ], [ [ 0, 0 ], [ 1, 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 4
   ], [ 1, 2 ], [ 3, 4 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ ],
   [ ] ], [ [ 1 ], [ 0 ] ], [ [ 1, 0 ], [ 0, 1 ] ], [ [ 0, 0 ], [ 1, 1 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 1, 2 ] ], [ [ 
  [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 3, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ [ 0, 0 ], [ 1, 1 ]
   ], [ [ 0, 1 ], [ 1, 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 5, 6
   ], [ 1, 2 ], [ 5, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ [ 0, 1 ]
  , [ 1, 0 ] ], [ [ 0, 0 ], [ 1, 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ [ 0, 0 ], [ 1, 1 ]
   ], [ [ 1, 0 ], [ 0, 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 5, 6
   ], [ 1, 2 ], [ 5, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ [ 0, 1 ]
  , [ 1, 0 ] ], [ [ 1, 1 ], [ 0, 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ [ 1, 0 ], [ 0, 1 ]
   ], [ [ 0, 0 ], [ 1, 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 5, 6
   ], [ 1, 2 ], [ 5, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ [ 1, 1 ]
  , [ 0, 0 ] ], [ [ 0, 1 ], [ 1, 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ [ 1, 0 ], [ 0, 1 ]
   ], [ [ 1, 1 ], [ 0, 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 5, 6
   ], [ 1, 2 ], [ 5, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ [ 1, 1 ]
  , [ 0, 0 ] ], [ [ 1, 0 ], [ 0, 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 1, 3 ] ], [ [ 
  [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 4
   ], [ 1, 2 ], [ 3, 4 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ ],
   [ ] ], [ [ 0 ], [ 1 ] ], [ [ 0, 0 ], [ 1, 1 ] ], [ [ 0, 1 ], [ 1, 0 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ 
  [ 0, 0 ], [ 1, 1 ] ], [ [ 0, 1 ], [ 1, 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 4
   ], [ 1, 2 ], [ 3, 4 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ ],
   [ ] ], [ [ 0 ], [ 1 ] ], [ [ 1, 0 ], [ 0, 1 ] ], [ [ 1, 1 ], [ 0, 0 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ 
  [ 1, 0 ], [ 0, 1 ] ], [ [ 1, 1 ], [ 0, 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 3, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 1, 2 ] ], [ [ 
  [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 1, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 3 ], [ 1, 2
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 5 ], [ 1, 2
   ], [ 4, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 1, 4 ], [ 3, 2
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 2 ], [ 1, 2
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 
  0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ 
  [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 1, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 5 ], [ 1, 2
   ], [ 4, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 3 ], [ 1, 2
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 4 ], [ 3, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 4 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 
  0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ 
  [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 3, 5
   ], [ 3, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 1, 4 ], [ 3, 2
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 2 ], [ 1, 2
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 
  0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ 
  [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 3, 5
   ], [ 3, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 4 ], [ 3, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 
  0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ 
  [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 4 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 4 ], [ 3, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 1, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 3 ], [ 1, 2
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 5 ], [ 1, 2
   ], [ 4, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 4 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 
  1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ 
  [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 1, 4 ], [ 3, 2
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 1, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 5 ], [ 1, 2
   ], [ 4, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 3 ], [ 1, 2
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 
  1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ 
  [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 2 ], [ 1, 2
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 4 ], [ 3, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 3, 5
   ], [ 3, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 
  1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ 
  [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 4 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 1, 4 ], [ 3, 2
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 4
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 3, 5
   ], [ 3, 5 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 
  1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ 
  [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 2 ], [ 1, 2
   ] ], [ [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 2 ], [ 1, 2
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 
  0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ 
  [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 1, 2 ] ], [ [ 
  [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 3, 5
   ], [ 3, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 1, 4 ], [ 3, 2
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 4 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 
  0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ 
  [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 3, 5
   ], [ 3, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 3, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 4 ], [ 3, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 2 ], [ 1, 2
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 
  0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ 
  [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 3 ], [ 1, 2
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 5 ], [ 1, 2
   ], [ 4, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 2 ] ], [ [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 1, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 1, 4 ], [ 3, 2
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 
  0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ 
  [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 4 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 5 ], [ 1, 2
   ], [ 4, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 3 ], [ 1, 2
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 1, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 1, 3 ] ], [ [ 
  [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 4 ], [ 3, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 4 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 
  1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ 
  [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 4 ], [ 3, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 3, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 3, 5
   ], [ 3, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 
  1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ 
  [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 2 ], [ 1, 2
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 1, 4 ], [ 3, 2
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 
  ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 3, 5
   ], [ 3, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 1, 2 ] ], [ [ 
  [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 
  1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ 
  [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 4 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 4
   ], [ 1, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 4 ], [ 3, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 3 ], [ 1, 2
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 5 ], [ 1, 2
   ], [ 4, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 1, 3 ] ], [ [ 
  [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 1, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ],
   [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 
  1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ 
  [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 4
   ], [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7
   ], [ 1, 2 ], [ 3, 4 ], [ 3, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7
   ], [ 1, 2 ], [ 5, 2 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 3, 6
   ], [ 1, 2 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 2 ], [ 1, 2
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 7
   ], [ 3, 4 ], [ 1, 5 ], [ 6, 7 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ]
   ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1
   ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 6, 4
   ], [ 3, 4 ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 
  ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 1, 4 ], [ 3, 2
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 5 ], [ 1, 2
   ], [ 4, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ]
  , [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 4, 3 ], [ 1, 2
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 1, 4
   ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ],
   [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 1 ] ], [ [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ 
  [ 0, 1 ], [ 1, 0 ] ], [ [ 0, 0 ], [ 1, 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 4
   ], [ 1, 2 ], [ 3, 4 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ ],
   [ ] ], [ [ 1 ], [ 0 ] ], [ [ 0, 1 ], [ 1, 0 ] ], [ [ 0, 0 ], [ 1, 1 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ ], [ ] ], [ 
  [ 1, 1 ], [ 0, 0 ] ], [ [ 1, 0 ], [ 0, 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 4
   ], [ 1, 2 ], [ 3, 4 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ ],
   [ ] ], [ [ 1 ], [ 0 ] ], [ [ 1, 1 ], [ 0, 0 ] ], [ [ 1, 0 ], [ 0, 1 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 5, 6
   ], [ 1, 2 ], [ 5, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ [ 0, 0 ]
  , [ 1, 1 ] ], [ [ 0, 1 ], [ 1, 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ [ 0, 1 ], [ 1, 0 ]
   ], [ [ 0, 0 ], [ 1, 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 5, 6
   ], [ 1, 2 ], [ 5, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ [ 0, 0 ]
  , [ 1, 1 ] ], [ [ 1, 0 ], [ 0, 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ [ 0, 1 ], [ 1, 0 ]
   ], [ [ 1, 1 ], [ 0, 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 5, 6
   ], [ 1, 2 ], [ 5, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ [ 1, 0 ]
  , [ 0, 1 ] ], [ [ 0, 0 ], [ 1, 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ [ 1, 1 ], [ 0, 0 ]
   ], [ [ 0, 1 ], [ 1, 0 ] ], [ [ 1 ], [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 5, 6
   ], [ 1, 2 ], [ 5, 6 ] ], [ [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ [ 1, 0 ]
  , [ 0, 1 ] ], [ [ 1, 1 ], [ 0, 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 0 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 2 ], [ 1, 5
   ], [ 1, 5 ] ], [ [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ [ 1, 1 ], [ 0, 0 ]
   ], [ [ 1, 0 ], [ 0, 1 ] ], [ [ 0 ], [ 1 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 4
   ], [ 1, 2 ], [ 3, 4 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ ],
   [ ] ], [ [ 0 ], [ 1 ] ], [ [ 0, 1 ], [ 1, 0 ] ], [ [ 1, 1 ], [ 0, 0 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ 
  [ 0, 1 ], [ 1, 0 ] ], [ [ 1, 1 ], [ 0, 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 4
   ], [ 1, 2 ], [ 3, 4 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ ],
   [ ] ], [ [ 0 ], [ 1 ] ], [ [ 1, 1 ], [ 0, 0 ] ], [ [ 0, 1 ], [ 1, 0 ]
   ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 1, 2
   ], [ 3, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ 
  [ 1, 1 ], [ 0, 0 ] ], [ [ 0, 1 ], [ 1, 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 1, 5 ], [ 3, 6
   ], [ 3, 4 ], [ 3, 6 ] ], [ [ [ 1 ], [ ] ], [ [ 0, 0, 1 ], [ 1 ] ], [ 
  [ ], [ ] ], [ [ 1, 0, 1 ], [ 0, 0, 0 ] ], [ [ 0, 1 ], [ ] ], [ [ 1 ], 
  [ 0 ] ] ]));
  Add(CoreList, Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 4
   ], [ 1, 2 ], [ 5, 2 ] ], [ [ [ 1 ], [ 0 ] ], [ [ ], [ ] ], [ [ ], [ 1
  , 0 ] ], [ [ ], [ 0 ] ], [ [ 1, 1, 1 ], [ 0, 1, 0 ] ], [ [ 0 ], [ 1, 1
  , 0 ] ] ]));
  return CoreList[i];
end);

InstallMethod(L2Examples, "for a pos int", [IsPosInt],
function(i)
  local pos, ord;
  pos := [ 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49,
           52, 53, 54, 56, 57, 59, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15,
           16, 17, 18, 19, 22, 23, 24, 26, 27, 29 ];
  ord := [ 1, 23, 3, 7, 25, 29, 10, 13, 32, 35, 14, 4, 6, 2, 36, 26, 28, 24,
           11, 8, 5, 15, 16, 9, 12, 30, 33, 27, 37, 31, 38, 34, 21, 18, 19,
           17, 43, 40, 41, 39, 20, 22, 42, 44 ];
  return TransducerCore(MinimalTransducer(L24BlockTransducers(pos[ord[i]])));
end);

#TODO add these:
#19: [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 6 ], [ 1, 7 ], [ 3, 6 ], [ 3, 4 ] ]
#[ [ [ 0 ], [  ] ], [ [ 1, 1, 0 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0, 1, 0 ], [ 1, 1, 1 ] ],  [ [  ], [  ] ], [ [ 0 ], [ 1 ] ], [ [ 1, 0 ], [  ] ] ]
#27: [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 6 ], [ 1, 7 ], [ 3, 6 ], [ 3, 4 ] ]
#[ [ [ 1 ], [  ] ], [ [ 0, 0, 1 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1, 0, 1 ], [ 0, 0, 0 ] ],  [ [  ], [  ] ], [ [ 1 ], [ 0 ] ], [ [ 0, 1 ], [  ] ] ]


InstallMethod(L3Examples, "for a pos int", [IsPosInt],
function(i)
  local data;
  data := [ [ [ [ 1, 1, 1 ] ], [ [ [ 0 ], [ 1 ], [ 2 ] ] ] ],
            [ [ [ 1, 1, 1 ] ], [ [ [ 0 ], [ 2 ], [ 1 ] ] ] ],
            [ [ [ 1, 1, 1 ] ], [ [ [ 1 ], [ 0 ], [ 2 ] ] ] ],
            [ [ [ 1, 1, 1 ] ], [ [ [ 1 ], [ 2 ], [ 0 ] ] ] ],
            [ [ [ 1, 1, 1 ] ], [ [ [ 2 ], [ 0 ], [ 1 ] ] ] ],
            [ [ [ 1, 1, 1 ] ], [ [ [ 2 ], [ 1 ], [ 0 ] ] ] ],
            [ [ [ 1, 1, 2 ], [ 1, 1, 2 ] ], [ [ [ 0 ], [ 1 ], [ 2 ] ],
              [ [ 1 ], [ 0 ], [ 2 ] ] ] ],
            [ [ [ 1, 2, 2 ], [ 1, 2, 2 ] ], [ [ [ 0 ], [ 1 ], [ 2 ] ],
              [ [ 0 ], [ 2 ], [ 1 ] ] ] ],
            [ [ [ 1, 2, 1 ], [ 1, 2, 1 ] ], [ [ [ 0 ], [ 1 ], [ 2 ] ],
              [ [ 2 ], [ 1 ], [ 0 ] ] ] ], 
            [ [ [ 1, 2, 2 ], [ 1, 2, 2 ] ], [ [ [ 0 ], [ 2 ], [ 1 ] ],
              [ [ 0 ], [ 1 ], [ 2 ] ] ] ],
            [ [ [ 1, 1, 2 ], [ 1, 1, 2 ] ], [ [ [ 0 ], [ 2 ], [ 1 ] ],
              [ [ 2 ], [ 0 ], [ 1 ] ] ] ], 
            [ [ [ 1, 2, 1 ], [ 1, 2, 1 ] ], [ [ [ 0 ], [ 2 ], [ 1 ] ],
              [ [ 1 ], [ 2 ], [ 0 ] ] ] ],
            [ [ [ 1, 1, 2 ], [ 1, 1, 2 ] ], [ [ [ 1 ], [ 0 ], [ 2 ] ],
              [ [ 0 ], [ 1 ], [ 2 ] ] ] ], 
            [ [ [ 1, 2, 2 ], [ 1, 2, 2 ] ], [ [ [ 1 ], [ 0 ], [ 2 ] ],
              [ [ 1 ], [ 2 ], [ 0 ] ] ] ],
            [ [ [ 1, 2, 1 ], [ 1, 2, 1 ] ], [ [ [ 1 ], [ 0 ], [ 2 ] ],
              [ [ 2 ], [ 0 ], [ 1 ] ] ] ], 
            [ [ [ 1, 2, 1 ], [ 1, 2, 1 ] ], [ [ [ 1 ], [ 2 ], [ 0 ] ],
              [ [ 0 ], [ 2 ], [ 1 ] ] ] ],
            [ [ [ 1, 2, 2 ], [ 1, 2, 2 ] ], [ [ [ 1 ], [ 2 ], [ 0 ] ],
              [ [ 1 ], [ 0 ], [ 2 ] ] ] ], 
            [ [ [ 1, 1, 2 ], [ 1, 1, 2 ] ], [ [ [ 1 ], [ 2 ], [ 0 ] ],
              [ [ 2 ], [ 1 ], [ 0 ] ] ] ],
            [ [ [ 1, 2, 1 ], [ 1, 2, 1 ] ], [ [ [ 2 ], [ 0 ], [ 1 ] ],
              [ [ 1 ], [ 0 ], [ 2 ] ] ] ], 
            [ [ [ 1, 1, 2 ], [ 1, 1, 2 ] ], [ [ [ 2 ], [ 0 ], [ 1 ] ],
              [ [ 0 ], [ 2 ], [ 1 ] ] ] ],
            [ [ [ 1, 2, 2 ], [ 1, 2, 2 ] ], [ [ [ 2 ], [ 0 ], [ 1 ] ],
              [ [ 2 ], [ 1 ], [ 0 ] ] ] ],
            [ [ [ 1, 2, 1 ], [ 1, 2, 1 ] ], [ [ [ 2 ], [ 1 ], [ 0 ] ],
              [ [ 0 ], [ 1 ], [ 2 ] ] ] ],
            [ [ [ 1, 2, 2 ], [ 1, 2, 2 ] ], [ [ [ 2 ], [ 1 ], [ 0 ] ],
              [ [ 2 ], [ 0 ], [ 1 ] ] ] ], 
            [ [ [ 1, 1, 2 ], [ 1, 1, 2 ] ], [ [ [ 2 ], [ 1 ], [ 0 ] ],
              [ [ 1 ], [ 2 ], [ 0 ] ] ] ],
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ], 
              [ [ [ 0 ], [  ], [  ] ], [ [ 1, 0 ], [ 2 ], [ 2 ] ],
              [ [ 2, 0 ], [ 1 ], [ 1 ] ] ] ],
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ], 
              [ [ [ 0 ], [  ], [  ] ], [ [ 2, 0 ], [ 1 ], [ 1 ] ],
              [ [ 1, 0 ], [ 2 ], [ 2 ] ] ] ], 
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ],
              [ [ [ 0 ], [ 0 ], [ 1, 2 ] ], [ [ 1 ], [ 1 ], [ 0, 2 ] ],
              [ [  ], [  ], [ 2 ] ] ] ],
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ], 
              [ [ [ 0 ], [ 0 ], [ 2, 1 ] ], [ [ 2 ], [ 2 ], [ 0, 1 ] ],
              [ [  ], [  ], [ 1 ] ] ] ],
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ], 
              [ [ [ 0 ], [ 1, 2 ], [ 0 ] ], [ [  ], [ 2 ], [  ] ],
              [ [ 1 ], [ 0, 2 ], [ 1 ] ] ] ],
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ], 
              [ [ [ 0 ], [ 2, 1 ], [ 0 ] ], [ [  ], [ 1 ], [  ] ],
              [ [ 2 ], [ 0, 1 ], [ 2 ] ] ] ], 
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ],
              [ [ [ 1 ], [  ], [  ] ], [ [ 0, 1 ], [ 2 ], [ 2 ] ],
              [ [ 2, 1 ], [ 0 ], [ 0 ] ] ] ], 
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ],
              [ [ [ 1 ], [  ], [  ] ], [ [ 2, 1 ], [ 0 ], [ 0 ] ],
              [ [ 0, 1 ], [ 2 ], [ 2 ] ] ] ], 
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ],
              [ [ [ 1 ], [ 1 ], [ 0, 2 ] ], [ [ 0 ], [ 0 ], [ 1, 2 ] ],
              [ [  ], [  ], [ 2 ] ] ] ], 
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ],
              [ [ [ 1 ], [ 1 ], [ 2, 0 ] ], [ [ 2 ], [ 2 ], [ 1, 0 ] ],
              [ [  ], [  ], [ 0 ] ] ] ],
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ], 
              [ [ [ 1 ], [ 0, 2 ], [ 1 ] ], [ [  ], [ 2 ], [  ] ], 
              [ [ 0 ], [ 1, 2 ], [ 0 ] ] ] ],
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ], 
              [ [ [ 1 ], [ 2, 0 ], [ 1 ] ], [ [  ], [ 0 ], [  ] ],
              [ [ 2 ], [ 1, 0 ], [ 2 ] ] ] ],
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ], 
              [ [ [ 2 ], [  ], [  ] ], [ [ 0, 2 ], [ 1 ], [ 1 ] ],
              [ [ 1, 2 ], [ 0 ], [ 0 ] ] ] ], 
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ],
              [ [ [ 2 ], [  ], [  ] ], [ [ 1, 2 ], [ 0 ], [ 0 ] ],
              [ [ 0, 2 ], [ 1 ], [ 1 ] ] ] ],
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ], 
              [ [ [ 2 ], [ 2 ], [ 0, 1 ] ], [ [ 0 ], [ 0 ], [ 2, 1 ] ],
              [ [  ], [  ], [ 1 ] ] ] ],
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ], 
              [ [ [ 2 ], [ 2 ], [ 1, 0 ] ], [ [ 1 ], [ 1 ], [ 2, 0 ] ],
              [ [  ], [  ], [ 0 ] ] ] ],
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ], 
              [ [ [ 2 ], [ 0, 1 ], [ 2 ] ], [ [  ], [ 1 ], [  ] ],
              [ [ 0 ], [ 2, 1 ], [ 0 ] ] ] ], 
            [ [ [ 1, 2, 3 ], [ 1, 2, 3 ], [ 1, 2, 3 ] ],
              [ [ [ 2 ], [ 1, 0 ], [ 2 ] ], [ [  ], [ 0 ], [  ] ],
              [ [ 1 ], [ 2, 0 ], [ 1 ] ] ] ] ];
  return Transducer(3, 3, data[i][1], data[i][2]);
end);

InstallMethod(L24BlockTransducers, "for a pos int", [IsPosInt],
function(i)
  local transitions, L;
  transitions := [ [ 1, 9 ], [ 1, 9 ], [ 2, 10 ], [ 2, 10 ], [ 3, 11 ],
                   [ 3, 11 ], [ 4, 12 ], [ 4, 12 ], [ 5, 13 ], [ 5, 13 ],
                   [ 6, 14 ], [ 6, 14 ], [ 7, 15 ], [ 7, 15 ], [ 8, 16 ],
                   [ 8, 16 ] ];

  L := [];

  Add(L, [ [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 1 ], [ 0 ] ] ]);


  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);


  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 1 ] ],
           [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 0 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 0 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 1 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  Add(L, [ [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ],
           [ [ 1 ], [ 1 ] ], [ [ 0 ], [ 0 ] ], [ [ 1 ], [ 1 ] ],
           [ [ 0 ], [ 0 ] ] ]);

  if i <= 30 then
    return Transducer(2, 2, transitions, L[i]);
  else
    return Transducer(2, 2, transitions, L[i - 30])
           * TransducerByNumber(1, 1, 6);
  fi;
end);


InstallMethod(L2SmallCommutators, "for a positive integer",
[IsPosInt],
function(n)
  if n = 1 then
    return [Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7 ],
                               [ 1, 2 ], [ 1, 2 ], [ 1, 8 ], [ 1, 8 ] ],
                             [ [ [ 0 ], [ 1 ] ], [ [  ], [  ] ],
                               [ [  ], [ 0, 1 ] ], [ [  ], [ 1 ] ], 
                               [ [ 1, 1, 0 ], [ 0, 0, 1 ] ],
                               [ [ 0, 0, 0 ], [ 1, 0, 1 ] ],
                               [ [ 0, 0 ], [ 1, 1 ] ], 
                               [ [ 0 ], [ 1 ] ] ]),
            [21, 12], [21, 20], [21, 3], [12, 3], [12, 20]];
  elif n = 2 then
    return [Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7 ],
                               [ 1, 2 ], [ 1, 2 ], [ 1, 8 ], [ 1, 8 ] ],
                             [ [ [ 0 ], [ 1 ] ], [ [  ], [  ] ],
                               [ [  ], [ 0, 1 ] ], [ [ 1 ], [  ] ], 
                               [ [ 1, 0, 0 ], [ 0, 0, 1 ] ],
                               [ [ 1, 0 ], [ 0, 1 ] ],
                               [ [ 0, 0, 0 ], [ 1, 1, 1 ] ], 
                               [ [ 0 ], [ 1 ] ] ]),
           [3, 21], [3, 12], [20, 21], [20, 12], [12, 21]];
  elif n = 3 then
    return [Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 6, 7 ],
                               [ 3, 8 ], [ 1, 2 ], [ 3, 2 ], [ 3, 2 ] ],
                             [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ],
                               [ [  ], [  ] ], [ [  ], [ 0 ] ],
                               [ [ 1, 0 ], [  ] ], 
                               [ [ 0, 0, 0 ], [ 1, 1, 1 ] ],
                               [ [ 1, 0 ], [ 0, 1 ] ],
                               [ [ 1, 1, 0 ], [ 0, 1, 1 ] ] ]),
            [23, 13], [13, 22], [4, 22], [4, 13], [23, 22]];
  elif n = 4 then
    return [Transducer(2, 2, [ [ 1, 2 ], [ 3, 2 ], [ 4, 5 ], [ 6, 7 ],
                               [ 3, 8 ], [ 1, 2 ], [ 3, 2 ], [ 3, 2 ] ],
                             [ [ [ 0 ], [ 1 ] ], [ [ 0 ], [ 1 ] ],
                               [ [  ], [  ] ], [ [ 0 ], [  ] ],
                               [ [ 1, 0 ], [  ] ], [ [ 0, 0 ], [ 1, 1 ] ],
                               [ [ 0, 1, 0 ], [ 1, 1, 1 ] ],
                               [ [ 1, 1, 0 ], [ 0, 0, 1 ] ] ]),
            [13, 4], [13, 23], [22, 4], [22, 13], [22, 23]];
  elif n = 5 then
    return [Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7 ],
                               [ 1, 8 ], [ 3, 9 ], [ 3, 10 ], [ 3, 4 ],
                               [ 3, 7 ], [ 3, 10 ] ],
                             [ [ [ 0 ], [  ] ], [ [ 1, 1, 0 ], [  ] ],
                               [ [  ], [  ] ], [ [ 1, 1, 1, 0 ], [ 0 ] ], 
                               [ [ 0 ], [  ] ], [ [ 1, 0 ], [  ] ],
                               [ [ 0, 0, 1, 0 ], [ 1, 1, 1, 1 ] ],
                               [ [ 0, 1, 0 ], [  ] ], 
                               [ [ 1, 1, 0 ], [  ] ], [ [ 0 ], [ 1 ] ] ]),
            [7, 41], [7, 34], [34, 41]];
  elif n = 6 then
    return [Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 3, 7 ],
                               [ 1, 8 ], [ 3, 9 ], [ 3, 10 ], [ 3, 4 ],
                               [ 3, 7 ], [ 3, 10 ] ],
                             [ [ [ 0 ], [  ] ], [ [ 1, 1, 1, 0 ], [ 0, 0 ] ],
                               [ [  ], [  ] ], [ [ 0, 1, 0 ], [  ] ], 
                               [ [  ], [ 0 ] ], [ [ 1, 0 ], [  ] ],
                               [ [ 0, 1, 1, 0 ], [ 1, 1, 1, 1 ] ],
                               [ [ 1, 0 ], [  ] ],  [ [ 1, 1, 0 ], [  ] ],
                               [ [ 0 ], [ 1 ] ] ]),
            [34, 7], [41, 34], [41, 7]];
  elif n = 7 then
    return [Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7 ],
                               [ 8, 2 ], [ 9, 2 ], [ 10, 7 ], [ 1, 2 ],
                               [ 8, 2 ], [ 9, 2 ] ],
                             [ [ [ 0 ], [ 1 ] ], [ [  ], [  ] ],
                               [ [  ], [ 0, 1 ] ], [ [  ], [ 1 ] ],
                               [ [  ], [ 0, 0, 1 ] ], 
                               [ [  ], [ 1, 0, 1 ] ], [ [  ], [ 1 ] ],
                               [ [ 0, 0, 0, 0 ], [ 1, 1, 0, 1 ] ], 
                               [ [ 1 ], [ 0, 0, 0, 1 ] ],
                               [ [  ], [ 0, 0, 1 ] ] ]),
            [8, 35], [8, 42], [25, 35], [25, 42], [35, 42]];
  elif n = 8 then
    return [Transducer(2, 2, [ [ 1, 2 ], [ 3, 4 ], [ 5, 2 ], [ 6, 7 ],
                               [ 8, 2 ], [ 9, 2 ], [ 10, 7 ], [ 1, 2 ],
                               [ 8, 2 ],   [ 9, 2 ] ],
                             [ [ [ 0 ], [ 1 ] ], [ [  ], [  ] ],
                               [ [  ], [ 0, 1 ] ], [ [ 1 ], [  ] ],
                               [ [  ], [ 0, 0, 1 ] ], 
                               [ [  ], [ 0, 1 ] ], [ [  ], [ 1 ] ],
                               [ [ 0, 0, 0, 0 ], [ 1, 0, 0, 1 ] ],
                               [ [  ], [ 1, 0, 1 ] ],
                               [ [ 1, 1 ], [ 0, 0, 0, 1 ] ] ]),
            [35, 25], [35, 8], [42, 8], [42, 25], [42, 35]];
  fi;


end);


InstallMethod(ListToListCode, "for a list",
[IsDenseList],
function(L)
  local str, newstr, elt;
  str := "    DataList := []";
  for elt in L do
    newstr := "";
    Append(newstr, Concatenation("\n    Add(DataList, ", String(elt), ")"));
    while Size(newstr)> 75 do
      Append(str, newstr{[1 .. 70]});
      newstr := newstr{[71 .. Size(newstr)]};
      Append(str, "\n\n  ");
    od;
    Append(str, newstr);
    Append(str, ";");
  od;
  return str;
end);
